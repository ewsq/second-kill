eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:12370/eureka/
  instance:
    preferIpAddress: true
ribbon:
  eureka:
    enabled: true
  connectTimeout: 2000
  readTimeout: 3000
  maxAutoRetries: 1

feign:
  hystrix:
   enabled: true

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 3000 #断路器超时时间，默认1000ms

server:
  port: 12406
  undertow:
    io-threads: 16
    worker-threads: 256
    buffer-size: 1024
    buffers-per-region: 1024
    direct-buffers: true
    accesslog:
      dir: my-undertow
      enabled: true
      pattern: '%t %a "%r" %s (%D ms)'

# sharding-jdbc分库分表的配置
sharding:
  jdbc:
    datasource:
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0
        username: root
        password: 123456
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1
        username: root
        password: 123456
      names: ds0,ds1
    config:
      sharding:
        tables:
          order_detail:
            table-strategy:
              inline:
                sharding-column: order_detail_id
                algorithm-expression: order_detail$->{order_detail_id % 2}
            key-generator-column-name: order_detail_id
            actual-data-nodes: ds$->{0..1}.order_detail$->{0..1}
          order_master:
            table-strategy:
              inline:
                sharding-column: order_id
                algorithm-expression: order_master$->{order_id % 2}
            key-generator-column-name: order_id
            actual-data-nodes: ds$->{0..1}.order_master$->{0..1}
        default-database-strategy:
          inline:
            sharding-column: user_id
            algorithm-expression: ds$->{user_id % 2}

spring:
  zipkin:
    base-url: http://localhost:12382/
  application:
    name: order
  redis:
    host: 127.0.0.1
    port: 6379
#  datasource:
#    driver-class-name: com.mysql.jdbc.Driver
#    url: "jdbc:mysql://localhost:3306/ec?useUnicode=true&characterEncoding=utf8"
#    username: root
#    password: 123456
#    maxActive: 50
#    maxWait: 5000
#    timeBetweenEvictionRunsMillis: 60000
#    minEvictableIdleTimeMillis: 300000
#    validationQuery: SELECT 'x'
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    maxOpenPreparedStatements: 20
#    removeAbandoned: true
#    removeAbandonedTimeout: 1800
#    logAbandoned: true

mybatis-plus:
  datasource: dataSource
  mapper-locations: classpath:/mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.eric.order.bean
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 1
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置
    logic-delete-value: 0
    logic-not-delete-value: 1
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

order:
  createOrder:
    secret: 123
  noShippingMoney: 20000 # 单位是分

management:
  security:
    enabled: false